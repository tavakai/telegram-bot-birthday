/* eslint-disable no-unused-vars */
const TelegramBot = require('node-telegram-bot-api')
const cron = require('node-cron')
const mustache = require('mustache')
const messages = require('./messages.json')
const commands = require('./commands.json')
const congrats = require('./congratulations.json')
require('dotenv').config()

const { TOKEN, GROUP_ID } = process.env

const timeZone = { timeZone: 'Europe/Moscow' }

const bot = new TelegramBot(TOKEN, { polling: true })

// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ congratulations.json
const randomCongratulation = (username) => {
	const max = Object.keys(congrats).length
  let rand = 0 + Math.random() * (max + 1 - 0);
  return mustache.render(congrats[Math.floor(rand)], { username })
}

// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
async function sendBirthdayReminder(username, groupId) {
	const message = mustache.render(messages.reminder, username)
	await bot.sendMessage(groupId, message, { chat_id: groupId, type: 'group' })
}

/**
 * Cron ‚Äî –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ Unix-—Å–∏—Å—Ç–µ–º–∞—Ö, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –ø—Ä—è–º–æ –≤ –û–°
 * https://www.ibm.com/docs/ru/urbancode-release/6.1.0?topic=interval-cron-expressions-defining-frequency
 */

cron.schedule('0 38 20 * * *', async () => {
	const today = new Date().toLocaleDateString('ru-RU', timeZone)
	const message = `üéâ –ó–∞–≤—Ç—Ä–∞ —É sdfsf –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è! üéÇ`
	await bot.sendMessage(GROUP_ID, message, { chat_id: GROUP_ID, type: 'group' })
	console.log({
		today
	})

	/**
	 * –ù–∏–∂–µ –Ω–∞–¥–æ –∫–∞–∫-—Ç–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –≤—ã—Å—ã–ª–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.
	 * –î–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è sendBirthdayReminder
	 */

})

bot.onText(/\/start/, (msg) => {
	const chatId = msg.chat.id
	const welcomeMessage = messages.greetings.start

	console.log({
		chatId, GROUP_ID
	})

	bot.sendMessage(GROUP_ID, welcomeMessage)
})

bot.onText(/\/add/, async (msg) => {
	const text = msg.text

	// if (text === commands.add) {
		const welcomeMessage = messages.commands.add.start

		await bot.sendMessage(GROUP_ID, welcomeMessage)

		bot.on('message', async (msg) => {
			const chatId = msg.chat.id

			// –î–ª—è —Ç–µ—Å—Ç–∞. –û–±—Ä–µ–∑–∞–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –î–î-–ú–ú
			const getDate = msg.text.split('.').splice(0, 2).join('.')
			await bot.sendMessage(chatId, `–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - ${getDate}`)
		})
	// }
})
